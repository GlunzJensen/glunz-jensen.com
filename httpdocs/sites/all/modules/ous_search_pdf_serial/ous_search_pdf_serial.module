<?php
function ous_search_pdf_serial_menu() {
	$items = array();
	
	$items['admin/config/search/ous_search_pdf_serial'] = array(
			'title' => 'Ous search serial PDF module settings',
			'description' => 'Define where to retrieve data from',
			'page callback' => 'drupal_get_form',
			'page arguments' => array('ous_search_pdf_serial_admin'),
			'access arguments' => array('administer search pdf serial settings'),
			'type' => MENU_NORMAL_ITEM,
	);
	return

	$items;
}

function ous_search_pdf_serial_permission() {
	return array(
			'administer search pdf serial settings' => array(
					'title' => t('Administer Ous search serial PDF module'),
					'description' => t('Perform administration tasks for Ous search serial PDF module.'),
			),
			'search pdf serial' => array(
					'title' => t('Search PDF serial'),
					'description' => t('Perform a serial search on PDF'),
			),
	);
}


function ous_search_pdf_serial_admin() {
	$form = array();

	
	$form['ous_search_pdf_serial_serial'] = array(
			'#type' => 'textfield',
			'#title' => t('Enter url to serial search'),
			'#default_value' => variable_get('ous_search_pdf_serial_serial', ''),
			'#size' => 100,
			'#maxlength' => 100,
			'#description' => t("enter the absolute path to the url where to retrieve json for serial search.<br>Example: http://DOMAINNAME/param1/param2/"),
			'#required' => TRUE,
	);

	return system_settings_form($form);
}

/**
 * Implements hook_search_access().
 */
function ous_search_pdf_serial_search_access() {
	return user_access('search pdf serial');
}

function ous_search_pdf_serial_search_info() {
  return array(
      'title' => 'Parts catalogue',
  	  'path'=> 'parts_catalogue',	
  );
}
/**
 * Implements hook_search_execute().
 *
 * @see hook_search_execute()
 */

function ous_search_pdf_serial_search_execute($keys = NULL, $conditions = NULL) {
 	
	$results = array();
	$retrieve_url = variable_get('ous_search_pdf_serial_serial');
	
	
	$options = array(
			'headers' => array(
					'Accept' => 'application/json',
			),
			'method' => 'GET',
			'data' => NULL
	);
	$response = drupal_http_request($retrieve_url . $keys.'.json' , $options);
	//dpm($response);
	if(!empty($response)){
		if ($response->code == 200) {
		$manual_number = array();
			$data = json_decode($response->data, true);
			krsort($data);
			//kpr($data);
		
			foreach($data as $key => $value){
				$key_exploded = explode('_',$key);
				$manual_number[$key_exploded[0]][][$key] = $value;
			}
			//kpr($manual_number);
			foreach($manual_number as $key => $newest_manual){
				$lang_array = array();
				$count = 0;
				//kpr($newest_manual);
				foreach($newest_manual as $manual_key => $allmanuals){
					$explode_manual = explode('_', key($allmanuals));
					//kpr($allmanuals);
					//kpr($explode_manual);
					//need to add the last things here. explode right. 
					if(isset($explode_manual[4]) && $explode_manual[4] != '0.pdf'){
						if (strpos($explode_manual[4], '.') !== false){
							$explode_manuals = explode('.',$explode_manual[4]);
							//kpr($explode_manuals);
							$lang_string = $explode_manuals[0];
						
						}
						else{
							$lang_string = $explode_manual[4];
						}
							
						//kpr($explode_manual[4]);
						//kpr($lang_string);
						//kpr($explode_manual);
						
						if(isset($lang_string)){
							if(!in_array($lang_string, $lang_array)){
								$lang_array[] = $lang_string;
								//kpr($lang_array);
								//kpr($allmanuals[key($allmanuals)]);
								//kpr(key($allmanuals));
								$results[] = array(
										'link' => $allmanuals[key($allmanuals)],
										'title' => key($allmanuals),
								);
							}
								
						}
					}
					else{
						if($count == 0){
							$results[] = array(
									'link' => $allmanuals[key($allmanuals)],
									'title' => key($allmanuals),
							);
							$count ++;
						}
						
					}
					//kpr($allmanuals);
				}
			}
		}
	}
	$list = $results;
	$per_page = 10;
	// Initialise the pager
	$current_page = pager_default_initialize(count($list), $per_page);
	
	
	// Split your list into page sized chunks
	$chunks = array_chunk($list,$per_page, TRUE);
	
	
	// Show the pager
	//print theme('pager', array('quantity',count($list)));
	
	
	// Show the appropriate items from the list
	print theme('item_list', array(
			'items' => $chunks[$current_page],
	));
  return $chunks[$current_page];
 
}
	
function ous_search_pdf_serial_form_alter(&$form, &$form_state, $form_id){
	
	if($form_id == 'search_form' ){
		if($form['#action'] == '/search/parts_catalogue'){
			$form['basic']['keys']['#title'] = 'Enter a serial No';
				
			$form['discription'] = array(
					'#type' => 'item',
					'#title' => t('<strong>Search for a parts catalogue</strong>'),
					'#markup' => "<p>Look up the parts catalogue for the equipment by typing in the equipment's serial No.<br>
The serial No appears from the equipment's name plate and consists of a combination
of the equipment No in 5 or 8 digits followed by a hyphen and a 4-digit serial No, e.g.
94592-0003 or 10060088-0034.</p>",
					'#weight' => -6,
			);
			
		}
		
	}
}